### Quantum Visualization Framework
### Optimization Matrix:
# Ψ(r,θ,φ) = R(r)Θ(θ)Φ(φ) - Wave Function
# H(t) = -Σ p(x)log(p(x)) - Information Flow
# ρ(x) = |Ψ(x)|² - Probability Density

version: '3.8'

services:
  quantum_engine:
    image: jupyter/scipy-notebook:latest
    container_name: quantum_engine
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
      - ./models:/home/jovyan/models
      - ./tests:/home/jovyan/tests
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=quantum_framework
      - EXPERIMENT_TYPE=quantum_visualization
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        limits:
          memory: 32G
          cpus: '8'
      restart_policy:
        condition: on-failure
    command: >
      bash -c "
        start.sh jupyter lab &&
        pip install --no-cache-dir \
          numpy scipy matplotlib \
          plotly dash jupyter-dash \
          ipywidgets ipyvolume pythreejs \
          sympy torch torchvision \
          qutip pytest hypothesis \
          numba cupy-cuda12x"

  visualization_service:
    build:
      context: ./visualization
      dockerfile: Dockerfile.viz
    ports:
      - "8050:8050"
    volumes:
      - ./visualization:/app
    environment:
      - DISPLAY=:0
    depends_on:
      - quantum_engine

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16