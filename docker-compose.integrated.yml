# Integrated Quantum-Cognitive Framework
# Orchestrates core services for quantum pattern synthesis and visualization

services:
  quantum_engine:
    image: jupyter/scipy-notebook:latest
    runtime: nvidia
    container_name: quantum_compute_engine
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_VISIBLE_DEVICES=0
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-quantum_framework}
      - JUPYTER_PASSWORD=''
      - GRANT_SUDO=yes
    user: root
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]
        limits:
          memory: ${QUANTUM_ENGINE_MEMORY:-10G}
          cpus: ${QUANTUM_ENGINE_CPU:-0.85}
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
      - ${LOCAL_WORKSPACE_FOLDER:-.}/src:/home/jovyan/src
    ports:
      - "8888:8888"
    networks:
      - quantum_net
      - nexus_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.16
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - quantum_net
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - quantum_net

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.0-beta
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MILVUS_ENABLE_STREAMING_NODE: "true"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
      - "8443:8443"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - quantum_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/api/v1/health"]
      interval: 30s
      timeout: 20s
      retries: 5

  nexus_prime:
    build:
      context: ./nexus
      dockerfile: Dockerfile.nexus
    container_name: nexus_prime_core
    environment:
      - MILVUS_HOST=standalone
      - MILVUS_PORT=19530
      - CLUSTERING_ENABLED=true
      - VECTOR_DIMENSION=512
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./nexus/data:/app/data
      - ./nexus/models:/app/models
    ports:
      - "5000:5000"
    depends_on:
      standalone:
        condition: service_healthy
    networks:
      - nexus_net
      - quantum_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  quantum_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
  nexus_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16